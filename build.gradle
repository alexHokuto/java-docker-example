buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.bmuschko:gradle-docker-plugin:3.1.+')
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-java-application'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def groovyVersion = '2.4'
def spockVersion = '1.1'

repositories {
	mavenCentral()
}


dependencies {
	compileOnly "org.projectlombok:lombok:1.16.16"

	compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}.+"
	testCompile "org.spockframework:spock-core:${spockVersion}-groovy-${groovyVersion}"
	testCompile "org.spockframework:spock-spring:${spockVersion}-groovy-${groovyVersion}"

}

test {
    testLogging {
        // set options for log level LIFECYCLE
        events "failed"
        exceptionFormat "full"

        // set options for log level DEBUG
        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}

// for docker
group = 'ryanmckay'

docker {
	javaApplication {
		baseImage = 'openjdk:8-jdk-alpine'
	}
}
